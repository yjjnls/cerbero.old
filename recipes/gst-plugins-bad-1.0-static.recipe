# -*- Mode: Python -*- vi:si:et:sw=4:sts=4:ts=4:syntax=python


class Recipe(custom.GStreamerStatic):
    name = 'gst-plugins-bad-1.0-static'
    extra_configure_options = '--disable-gsm --disable-festival \
        --disable-videomaxrate --disable-bz2 --disable-libde265 \
        --disable-linsys --disable-fbdev --disable-apexsink \
        --disable-celt --disable-curl --disable-dc1394 --disable-directfb \
        --disable-dirac --disable-faac --disable-flite --disable-gme \
        --disable-ladspa --disable-lv2 --disable-mimic --disable-modplug \
        --disable-mpeg2enc --disable-mplex --disable-musepack --disable-mythtv \
        --disable-neon --disable-ofa --disable-openal --disable-opencv \
        --disable-pvr --disable-sdl --disable-sndfile \
        --disable-teletextdec --disable-timidity \
        --disable-vdpau --disable-voamrwbenc --disable-wildmidi \
        --disable-dtls \
        --disable-xvid --disable-zbar --disable-sdi --disable-qt'
    remotes = {'origin': 'git://anongit.freedesktop.org/gstreamer/gst-plugins-bad'}
    deps = ['gstreamer-1.0', 'gst-plugins-base-1.0', 'bzip2', 'libass',
            'faad2', 'libkate', 'zlib', 'openh264', 'opus', 'nettle', 'librtmp',
            'libsrtp', 'libdca', 'libmms', 'libdvdnav',
            'soundtouch', 'vo-aacenc', 'librsvg', 'openjpeg', 'graphene',
            'openssl',
            'spandsp', 'webrtc-audio-processing','sbc']
    use_system_libs = True

    files_plugins_effects_devel = [
             'libgstaccurip',
             'libgstaiff',
             'libgstaudiofxbad',
             'libgstautoconvert',
             'libgstbayer',
             'libgstcoloreffects',
             'libgstdebugutilsbad',
             'libgstfieldanalysis',
             'libgstfreeverb',
             'libgstfrei0r',
             'libgstgaudieffects',
             'libgstgeometrictransform',
             'libgstinter',
             'libgstinterlace',
             'libgstivtc',
             'libgstlegacyrawparse',
             'libgstremovesilence',
             'libgstsegmentclip',
             'libgstsmooth',
             'libgstspeed',
             'libgstsoundtouch',
             'libgstvideofiltersbad',
             'libgstaudiomixer',
             'libgstcompositor',
             'libgstwebrtcdsp',
    ]

    files_plugins_codecs_devel = [
             'libgstadpcmdec',
             'libgstadpcmenc',
             'libgstdashdemux',
             'libgstdvbsuboverlay',
             'libgstdvdspu',
             'libgsthls',
             'libgstid3tag',
             'libgstkate',
             'libgstmidi',
             'libgstmxf',
             'libgstopenh264',
             'libgstopusparse',
             'libgstpcapparse',
             'libgstpnm',
             'libgstrfbsrc',
             'libgstsiren',
             'libgstsmoothstreaming',
             'libgstsubenc',
             'libgstvideoparsersbad',
             'libgsty4mdec',
             'libgstjpegformat',
             'libgstgdp',
             'libgstrsvg',
             'libgstopenjpeg',
             'libgstspandsp',
             'libgstsbc',
    ]

    platform_files_plugins_codecs_devel = {
        Platform.ANDROID: [
             'libgstandroidmedia',
            ]
    }

    files_plugins_codecs_gpl_devel = [
             'libgstassrender',
    ]

    files_plugins_codecs_restricted_devel = [
             'libgstasfmux',
             'libgstdtsdec',
             'libgstfaad',
             'libgstmpegpsdemux',
             'libgstmpegpsmux',
             'libgstmpegtsdemux',
             'libgstmpegtsmux',
             'libgstvoaacenc'
    ]

    files_plugins_dvd_devel = [
             'libgstresindvd',
    ]

    files_plugins_net_devel = [
             'libgstsdpelem',
             'libgstsrtp',
    ]

    files_plugins_net_restricted_devel = [
             'libgstmms',
             'libgstrtmp',
    ]

    files_plugins_capture_devel = [
             'libgstcamerabin',
            ]


    platform_files_plugins_capture_devel = {
        Platform.LINUX: [
             'libgstdvb',
            ],
        Platform.WINDOWS: [
             'libgstwinscreencap',
             'libgstdirectsoundsrc',
             'libgstwinks',
            ]
    }

    files_plugins_vis_devel = [
             'libgstaudiovisualizers',
            ]

    platform_files_plugins_sys_devel = {
        Platform.LINUX: [
             'libgstshm',
             'libgstopengl',
             'libgstdecklink',
            ],
        Platform.WINDOWS: [
             'libgstd3dvideosink',
             'libgstwasapi',
             'libgstopengl',
            ],
        Platform.DARWIN: [
             'libgstapplemedia',
             'libgstshm',
             'libgstopengl',
             'libgstdecklink',
            ],
        Platform.IOS: [
             'libgstapplemedia',
             'libgstopengl',
             'libgstshm',
            ],
        Platform.ANDROID: [
             'libgstopensles',
             'libgstopengl',
            ]
    }

    files_plugins_sys  = []

    platform_files_codecs_devel = {
        Platform.ANDROID: [
              'share/gst-android/ndk-build',
            ]
    }

    def prepare(self):
        self.append_env['CFLAGS'] = " -Wno-error -DGSTREAMER_GLIB_COCOA_NSAPPLICATION=1 "
        self.append_env['OBJCFLAGS'] = " -Wno-error -DGSTREAMER_GLIB_COCOA_NSAPPLICATION=1 "
        self.append_env['CXXFLAGS'] = " -Wno-error "
        self.append_env['CPPFLAGS'] = " -Wno-error "

        if self.config.platform == Platform.WINDOWS:
            # FIXME: This will almost certainly fail to build on Windows due to
			# https://bugzilla.gnome.org/show_bug.cgi?id=770264
			# See also, non-static and gstreamer-1.0-effects.package
			self.deps.remove('webrtc-audio-processing')
			self.files_plugins_effects_devel.remove('libgstwebrtcdsp')

        if self.config.target_platform != Platform.LINUX:
            self.configure_options += '--disable-gtk-doc '
        if self.config.target_platform == Platform.WINDOWS:
            self.configure_options += \
                ' --disable-cog --disable-sdl '\
                '--disable-cdaudio'
        if self.config.target_platform in [ Platform.ANDROID, Platform.IOS ]:
            for d in ['libdvdnav']:
                self.deps.remove(d)
            self.files_plugins_dvd_devel.remove('libgstresindvd')
        if self.config.variants.nodebug:
            self.append_env['CFLAGS'] += ' -DGST_LEVEL_MAX=GST_LEVEL_FIXME'

        if self.config.target_distro_version in [DistroVersion.DEBIAN_SQUEEZE, DistroVersion.DEBIAN_WHEEZY]:
            self.platform_files_plugins_capture_devel[Platform.LINUX].remove("libgstdvb")
        super(Recipe, self).prepare()
