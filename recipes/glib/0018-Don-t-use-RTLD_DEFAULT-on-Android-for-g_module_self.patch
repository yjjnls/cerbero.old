From 5b71ac916735c709edc9d5ea77d78721ddfad6f3 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Sebastian=20Dr=C3=B6ge?= <sebastian@centricular.com>
Date: Wed, 8 Feb 2017 16:27:34 +0200
Subject: [PATCH 2/2] =?UTF-8?q?gmodule=20=E2=80=93=20Don't=20use=20RTLD=5F?=
 =?UTF-8?q?DEFAULT=20on=20Android=20for=20g=5Fmodule=5Fself()=20on=20Andro?=
 =?UTF-8?q?id=2064=20bit?=
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

On 64 bit Android this is #defined to 0, which is considered an invalid
library handle in all other cases. RTLD_DEFAULT is only supposed to be
used with dlsym() it seems, and the usage here was just an
"optimization" before.

By dlopen'ing NULL, we get the same on all 64 bit Android variants and it
actually works instead of erroring out. On 32 bit Android, dlopen() of
NULL unfortunately usually gives us something useless that finds no
symbols whatsoever.

https://bugzilla.gnome.org/show_bug.cgi?id=776876
---
 gmodule/gmodule-dl.c | 18 +++++++++++++++---
 1 file changed, 15 insertions(+), 3 deletions(-)

diff --git a/gmodule/gmodule-dl.c b/gmodule/gmodule-dl.c
index e452e3495..80ef80ceb 100644
--- a/gmodule/gmodule-dl.c
+++ b/gmodule/gmodule-dl.c
@@ -111,8 +111,14 @@ _g_module_self (void)
   /* to query symbols from the program itself, special link options
    * are required on some systems.
    */
-  
-#ifdef __BIONIC__
+
+  /* On Android 32 bit (i.e. not __LP64__), dlopen(NULL)
+   * does not work reliable and generally no symbols are found
+   * at all. RTLD_DEFAULT works though.
+   * On Android 64 bit, dlopen(NULL) seems to work but RTLD_DEFAULT
+   * is NULL, which is considered an invalid module.
+   */
+#if defined(__BIONIC__) && !defined(__LP64__)
   handle = RTLD_DEFAULT;
 #else
   handle = dlopen (NULL, RTLD_GLOBAL | RTLD_LAZY);
@@ -129,9 +135,15 @@ _g_module_close (gpointer handle,
 {
   /* are there any systems out there that have dlopen()/dlclose()
    * without a reference count implementation?
+   *
+   * See above for the Android special case
    */
+#if defined(__BIONIC__) && !defined(__LP64__)
+  is_unref = (handle != RTLD_DEFAULT);
+#else
   is_unref |= 1;
-  
+#endif
+
   if (is_unref)
     {
       if (dlclose (handle) != 0)
-- 
2.11.0

